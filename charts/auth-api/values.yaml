# Default values for auth-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configuration:
  api:
    auth:
      exemptPaths: []
    aws:
      credentialsFile: ""
    http:
      address: 0.0.0.0
      port: 3001
    hydra:
      admin:
        password: ""
        uri: ""
        username: ""
    logging:
      level: debug
    mongo:
      denyFields:
        toJson:
          - __v
          - _app
          - password
          - createdOn
          - modifiedOn
      options:
        useNewUrlParser: true
        useUnifiedTopology: true
      uri:
  name: RamJam Access Manager (Helm Config)
  nodemailer: null
  session:
    cookie:
      SameSite: Strict
      httpOnly: true
      sameSite: Strict
      secure: auto
    cookieName: sessionId
    secret:
  aws:
    accessKeyId:
    region: eu-west-1
    secretAccessKey:
  firebase:
    auth_provider_x509_cert_url:
    auth_uri:
    client_email:
    client_id: ""
    client_x509_cert_url:
    private_key: |

    private_key_id:
    project_id:
    token_uri:
    type: service_account
