{{- $fullName := include "ping-atracs.fullname" . -}}
{{-  $secretName := printf "%s-%s" $fullName "config" -}}
{{-  $serverName := printf "%s-%s" .Chart.Name "server" -}}
{{-  $workerName := printf "%s-%s" .Chart.Name "worker" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ping-atracs.fullname" . }}
  labels:
    {{- include "ping-atracs.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ping-atracs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ping-atracs.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          secret:
            secretName: {{ $secretName }}
            items:
              - key: config.yaml
                path: config.yaml

      serviceAccountName: {{ include "ping-atracs.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.worker.enabled }}
        - name: {{ $workerName }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/go-atracs"]
          args: ["process", "message-queue", "--config", "/opt/ping-asset/etc/atracs/config.yaml", "--log-level", "debug"]
          volumeMounts:
            - name: config
              mountPath: /opt/ping-asset/etc/atracs/config.yaml
              readOnly: true
              subPath: config.yaml
          ports:
            - name: health
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: health
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 29
            successThreshold: 1
            timeoutSeconds: 5

          readinessProbe:
            httpGet:
              path: /health
              port: health
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 29
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
        # We only include the server if server.enabled is true
        {{- if .Values.server.enabled }}
        - name: {{ $serverName }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/go-atracs"]
          args: ["serve", "--config", "/opt/ping-asset/etc/atracs/config.yaml", "--log-level", "debug"]
          volumeMounts:
            - name: config
              mountPath: /opt/ping-asset/etc/atracs/config.yaml
              readOnly: true
              subPath: config.yaml
          ports:
            - name: health
              containerPort: 8080
              protocol: TCP
            - name: http
              containerPort: 80
              protocol: TCP
            - name: udp
              containerPort: 5000
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 29
            successThreshold: 1
            timeoutSeconds: 5

          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 29
            successThreshold: 1
            timeoutSeconds: 5

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        ## End Server
        {{- end }}
        
        
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
